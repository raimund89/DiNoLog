{"name":"Dinolog","tagline":"A Python package providing the logging of arbitrary timestamped data from any computer onto one or more coupled servers using Ethernet, Wifi, 2.4MHz nRF24L01+, 433MHz tranceivers or USB.","body":"# Welcome to DiNoLog\r\nThis Python package will provide the modules necessary to run an 'Internet-of-Things' system. It is still a work in progress, at the moment it consists of about 20 lines of code.. The most important information at this moment is therefore the set of goals, and a design for the architecture of the package. This page will constantly be updated with the latest information.\r\n\r\n## The goal\r\nThe goal is to be able to log any kind of timestamped information (from simple datatypes like integers/floats to binary data like images and sound) to a server pool, which consists of at least one server. This data can later be queried for use in any application, or used when incoming by registering callback functions or overloading the DiNoLogServer class. Any number of nodes (i.e. Raspberry Pi, Arduino, another computer, or even microprocessors with USB or a wireless connection) can be registered to the server pool as long as they support one of the connection methods. The servers will synchronize any changes in their database to each other, making sure that their databases are the same.\r\n\r\n### The featurelist\r\nThis list contains all the features that were, will be or are part of DiNoLog. Because of this the list will constantly be changing, with some features being added to the wishlist, others being removed because of all kinds of reasons. This list will hopefully be updated during development, but always check the release notes to be sure of the functionality!\r\n\r\nModule | Feature | Status\r\n----|------|----\r\nServer | Config file with initialization settings (server name, listing port, etc.) | 10% in master branch\r\n | Runtime log in systemd | Not supported\r\nNode | Runtime log in systemd | Not supported","google":"UA-67860397-1","note":"Don't delete this file! It's used internally to help with page regeneration."}